{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"en",
				"endl"
			],
			[
				"ins",
				"insert"
			],
			[
				"prin",
				"print_helper"
			],
			[
				"pir",
				"print_helper"
			],
			[
				"chil",
				"children"
			],
			[
				"de",
				"degree"
			],
			[
				"insert",
				"insert_child"
			],
			[
				"heap",
				"heap_link"
			],
			[
				"fib",
				"FibonacciHeap"
			],
			[
				"inse",
				"insert_left"
			],
			[
				"fi",
				"FibonacciHeap"
			],
			[
				"F",
				"FibonacciHeap"
			],
			[
				"new",
				"new_heap"
			],
			[
				"hea",
				"heapify"
			],
			[
				"ha",
				"heap_size"
			],
			[
				"targ",
				"target_line	forflow"
			],
			[
				"tra",
				"train_target	statement"
			],
			[
				"sour",
				"source	statement"
			],
			[
				"tun",
				"tune_target	statement"
			],
			[
				"so",
				"source_file	statement"
			],
			[
				"tar",
				"target_file	statement"
			],
			[
				"inp",
				"input_filename	statement"
			],
			[
				"data",
				"DATA"
			],
			[
				"P",
				"Prim"
			],
			[
				"im",
				"import"
			],
			[
				"dic",
				"dict_obj	param"
			],
			[
				"iter",
				"iterable	param"
			],
			[
				"right",
				"right_side"
			],
			[
				"left",
				"left_side"
			],
			[
				"as",
				"assertEquals	statement"
			],
			[
				"bas",
				"basics	module"
			],
			[
				"uni",
				"unittest"
			],
			[
				"date",
				"datetime_CAPI	class"
			],
			[
				"in",
				"indexes"
			],
			[
				"qu",
				"quicksort"
			],
			[
				"res",
				"responses	statement"
			],
			[
				"al",
				"all_f_words	statement"
			],
			[
				"all_",
				"all_f_words	statement"
			],
			[
				"all",
				"all_e_words	statement"
			],
			[
				"lista",
				"listaWdrzewo"
			],
			[
				"list",
				"listaWdrzewo"
			],
			[
				"li",
				"listaWdrzewo"
			],
			[
				"st",
				"student"
			],
			[
				"wr",
				"write"
			],
			[
				"f_",
				"f_words	forflow"
			],
			[
				"pro",
				"probabilities	statement"
			],
			[
				"pr",
				"probabilities	statement"
			],
			[
				"e",
				"e_words	forflow"
			],
			[
				"f",
				"f_sentences	param"
			],
			[
				"def",
				"defaultdict	class"
			],
			[
				"from",
				"fromkeys"
			],
			[
				"destin",
				"destination_file"
			],
			[
				"source",
				"source_file"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"frame",
				"frame_tuple	param"
			],
			[
				"rev",
				"reverse	False"
			],
			[
				"appl",
				"apply_async	function"
			],
			[
				"fold",
				"foldings	statement"
			],
			[
				"seq",
				"sequence2	param"
			],
			[
				"str",
				"structure	statement"
			],
			[
				"homo",
				"homogeneity"
			],
			[
				"ta",
				"task_id	statement"
			],
			[
				"is",
				"isinstance	function"
			],
			[
				"vali",
				"validate_sirna	function"
			],
			[
				"war",
				"warning"
			],
			[
				"my",
				"myFoldr"
			],
			[
				"sq",
				"sqrlist"
			],
			[
				"read",
				"reader"
			],
			[
				"pod",
				"podzbiory"
			],
			[
				"si",
				"sign	forflow"
			],
			[
				"sp",
				"sp_len	statement"
			],
			[
				"s",
				"sign	forflow"
			],
			[
				"_",
				"_last"
			],
			[
				"dr",
				"drugi"
			],
			[
				"p",
				"przedostatni"
			],
			[
				"le",
				"length"
			],
			[
				"pow",
				"powPOM"
			],
			[
				"se",
				"separators	function"
			],
			[
				"sli",
				"splitted	statement"
			],
			[
				"fil",
				"filename	param"
			],
			[
				"pos",
				"possible"
			],
			[
				"reg",
				"regexp"
			],
			[
				"ma",
				"max_offtarget"
			],
			[
				"chec",
				"check_complementary"
			],
			[
				"che",
				"check_complementary"
			],
			[
				"exectue",
				"Executes"
			],
			[
				"bc",
				"backbones"
			],
			[
				"shmir",
				"sh-miR"
			],
			[
				"shmi",
				"sh-miRs"
			],
			[
				"no",
				"no_difference"
			],
			[
				"sub",
				"subtask_id	statement"
			],
			[
				"trans",
				"transcript"
			],
			[
				"ad",
				"add_argument"
			],
			[
				"remo",
				"remove_error_folding	function"
			],
			[
				"path",
				"path_id	param"
			],
			[
				"M",
				"MFOLD_FILES	class"
			],
			[
				"stat",
				"status	statement"
			],
			[
				"get",
				"get_json	function"
			],
			[
				"ca",
				"catch_errors	import"
			],
			[
				"No",
				"NoResultError	class"
			],
			[
				"Eror",
				"ValueError"
			],
			[
				"A",
				"AttributeError	class"
			],
			[
				"IN",
				"IndexError	class"
			],
			[
				"z",
				"zip_file	statement"
			],
			[
				"di",
				"dir1	param"
			],
			[
				"tras",
				"transcript_name"
			],
			[
				"dir",
				"dirname	forflow"
			],
			[
				"re",
				"rmtree	function"
			],
			[
				"ur",
				"urllib2	module"
			],
			[
				"lo",
				"logger	statement"
			],
			[
				"ge",
				"generator	param"
			],
			[
				"W",
				"WiekY"
			],
			[
				"Wie",
				"WiekX"
			],
			[
				"dzi",
				"dziadek"
			],
			[
				"rodz",
				"rodzenstwo"
			],
			[
				"max",
				"maximum_CG	param"
			],
			[
				"val",
				"validate_and_offtarget"
			],
			[
				"patter",
				"patterns_dict	forflow"
			],
			[
				"fin",
				"find_by_patterns	function"
			],
			[
				"db",
				"db_session	instance"
			],
			[
				"frames",
				"frames_with_score	statement"
			],
			[
				"apl",
				"apply_async	function"
			],
			[
				"off",
				"offtarget"
			],
			[
				"regex",
				"regexp_type"
			],
			[
				"reve",
				"reverse_complement	function"
			],
			[
				"offtarget",
				"actual_offtarget"
			],
			[
				"score",
				"score_from_transcript	function"
			],
			[
				"ite",
				"iteritems	function"
			]
		]
	},
	"buffers":
	[
		{
			"file": "fibonacci.cpp",
			"settings":
			{
				"buffer_size": 5903,
				"line_ending": "Unix"
			}
		},
		{
			"file": "binary.cpp",
			"settings":
			{
				"buffer_size": 2515,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 1642,
				"line_ending": "Unix"
			}
		},
		{
			"file": "binary.h",
			"settings":
			{
				"buffer_size": 624,
				"line_ending": "Unix"
			}
		},
		{
			"file": "fibonacci.h",
			"settings":
			{
				"buffer_size": 679,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "all",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"make",
				"Set Syntax: Makefile"
			],
			[
				"ma",
				"Set Syntax: Makefile"
			],
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"sass",
				"Set Syntax: Sass"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"hask",
				"SublimeHaskell: Check"
			],
			[
				"page",
				"Package Control: Install Package"
			],
			[
				"Snippet: rd",
				"Snippet: rdb"
			],
			[
				"Snippet: pd",
				"Snippet: pdb"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pytho",
				"Set Syntax: Python"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"subl",
				"SublimeLinter: Show All Errors"
			],
			[
				"insl",
				"Package Control: Install Package"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"list ",
				"Package Control: List Packages"
			],
			[
				"contr",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Remove Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"packe",
				"Package Control: Install Package"
			],
			[
				"paca",
				"Package Control: Enable Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			],
			[
				"package control: remove Package",
				"Package Control: Remove Package"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 293.0,
		"history":
		[
			"$SHELL -l -c '/usr/bin/which flake8'",
			"path",
			"from sys import path",
			"lol",
			"ls",
			"print('asd', end='...')",
			"kaczka",
			"kaczka = '11'",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/nozdi/uam/aps/heaps"
	],
	"file_history":
	[
		"/Users/nozdi/uam/aps/heaps/binary.cpp",
		"/Users/nozdi/uam/aps/heaps/binary.h",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/User/c.sublime-build",
		"/Users/nozdi/uam/aps/heaps/heap.sublime-project",
		"/Users/nozdi/uam/aps/heaps/fibonacci.cpp",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/Users/nozdi/uam/tau/moses_make/separate.py",
		"/Users/nozdi/uam/tau/Makefile_new-d0af6bd605a665edcbacee36e45361bf5d3b4739",
		"/Users/nozdi/uam/tau/moses_make/a.en",
		"/Users/nozdi/uam/tau/moses_make/b.en",
		"/Users/nozdi/uam/tau/moses_make/translate_new-c393b91e8d33d5155e3027b7aaceae3596fbc538.sh",
		"/Users/nozdi/uam/tau/moses_make/a.ka",
		"/Users/nozdi/uam/tau/moses_make/b.ka",
		"/Users/nozdi/uam/tau/moses_make/b.pl",
		"/Users/nozdi/uam/tau/moses_make/train_moses.make",
		"/Users/nozdi/uam/tau/tamada/recaser.make",
		"/Users/nozdi/uam/tau/tamada/rozmowki.make",
		"/Users/nozdi/uam/tau/tamada/.gitignore",
		"/Users/nozdi/uam/tau/tamada/recaser/train-recaser.perl",
		"/Users/nozdi/uam/tau/recaser/recaser.make",
		"/Users/nozdi/.profile",
		"/Users/nozdi/uam/tau/recaser/in",
		"/Users/nozdi/moses/scripts/recaser/recase.perl",
		"/Users/nozdi/uam/tau/recaser/Vagrantfile",
		"/Users/nozdi/shmir/Vagrantfile",
		"/Users/nozdi/uam/tau/recaser/Makefile",
		"/Users/nozdi/moses/srilm/doc/README.macosx",
		"/Users/nozdi/moses/srilm/Makefile",
		"/Users/nozdi/moses/srilm/INSTALL",
		"/Users/nozdi/moses/srilm/make",
		"/Users/nozdi/uam/tau/recaser/train-recaser.perl",
		"/Users/nozdi/uam/funkcyjne/parsery.hs",
		"/Users/nozdi/uam/funkcyjne/cw7.hs",
		"/Users/nozdi/bool.cpp",
		"/Users/nozdi/a",
		"/Users/nozdi/uam/lpi/LPI/cw3/cw3.pro",
		"/Users/nozdi/python/basic-workshops/basics.py",
		"/Users/nozdi/python/basic-workshops/test_basics.py",
		"/Users/nozdi/Downloads/Koła/std.py",
		"/Users/nozdi/python/push/all_data",
		"/Users/nozdi/python/statistical-machine-translation/tests/rach",
		"/Users/nozdi/python/statistical-machine-translation/tests/foo",
		"/Users/nozdi/uam/funkcyjne/cw6.hs",
		"/Users/nozdi/python/counter.py",
		"/Users/nozdi/python/zliczacz.py",
		"/Users/nozdi/uam/funkcyjne/cw3.hs",
		"/Users/nozdi/uam/funkcyjne/cw4.hs",
		"/Users/nozdi/python/push/puup.py",
		"/Users/nozdi/python/push/push.py",
		"/Users/nozdi/python/statistical-machine-translation/sub-mini1.out",
		"/Users/nozdi/python/statistical-machine-translation/genesis.out",
		"/Users/nozdi/python/statistical-machine-translation/simple.out",
		"/Users/nozdi/python/ls.py",
		"/Users/nozdi/python/statistical-machine-translation/main.py",
		"/Users/nozdi/python/statistical-machine-translation/out_sub1",
		"/Users/nozdi/python/statistical-machine-translation/out_sub",
		"/Users/nozdi/python/statistical-machine-translation/algorithms.py",
		"/Users/nozdi/uam/funkcyjne/cw1_4.hs",
		"/Users/nozdi/uam/funkcyjne/cw5.hs",
		"/Users/nozdi/python/pendrive.py",
		"/Users/nozdi/python/statistical-machine-translation/README.md",
		"/Users/nozdi/shmir/src/shmir/utils.py",
		"/Users/nozdi/shmir/src/shmir/designer/errors.py",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/User/rdb.sublime-snippet",
		"/Users/nozdi/shmir/fig.yml",
		"/Users/nozdi/uam/funkcyjne/cw2.hs",
		"/Users/nozdi/Dropbox/pyfuzzy.py",
		"/Users/nozdi/shmir/puppet/modules/postgresql/lib/puppet/provider/postgresql_psql/ruby.rb",
		"/Users/nozdi/shmir/puppet/modules/nginx/spec/defines/resource_upstream_spec.rb",
		"/Users/nozdi/shmir/README.md",
		"/Users/nozdi/shmir/puppet/modules/stdlib/lib/facter/facter_dot_d.rb",
		"/Users/nozdi/shmir/src/shmir/designer/design.py",
		"/Users/nozdi/shmir-docker/puppet/modules/stdlib/lib/puppet/parser/functions/keys.rb",
		"/Users/nozdi/shmir-docker/puppet/modules/stdlib/lib/puppet/parser/functions/pick_default.rb",
		"/Users/nozdi/shmir-docker/puppet/modules/stdlib/spec/unit/puppet/parser/functions/pick_default_spec.rb",
		"/Users/nozdi/shmir-docker/src/shmir/decorators.py",
		"/Users/nozdi/shmir-docker/Dockerfile",
		"/Users/nozdi/shmir-docker/puppet/modules/nginx/Puppetfile",
		"/Users/nozdi/uam/lpi/LPI/cw1/dane.pro",
		"/Users/nozdi/.ssh/config",
		"/Users/nozdi/helpfull",
		"/Users/nozdi/uam/tau/change.py",
		"/Users/nozdi/uam/lpi/LPI/cw2/cw2.pro",
		"/Users/nozdi/uam/lpi/LPI/dane.pro",
		"/Users/nozdi/uam/lpi/cw1.pl",
		"/Users/nozdi/shmir/src/shmir/designer/validators.py",
		"/Users/nozdi/shmir/src/shmir/designer/score.py",
		"/Users/nozdi/shmir/src/shmir/settings.py",
		"/Users/nozdi/shmir/src/shmir/__init__.py",
		"/Users/nozdi/shmir/src/shmir/async.py",
		"/Users/nozdi/shmir/src/shmir/data/models.py",
		"/Users/nozdi/shmir/src/shmir/designer/offtarget.py",
		"/Users/nozdi/shmir/src/shmir/data/ncbi_api.py",
		"/Users/nozdi/shmir/src/shmir/designer/utils.py",
		"/Users/nozdi/shmir/src/shmir/designer/ss.py",
		"/Users/nozdi/shmir/src/shmir/designer/__init__.py",
		"/Users/nozdi/shmir/src/shmir/contextmanagers.py",
		"/Users/nozdi/shmir/src/shmir/mfold.py",
		"/Users/nozdi/shmir/src/shmir/decorators.py",
		"/Users/nozdi/shmir/src/shmir/result_handlers.py",
		"/Users/nozdi/shmir/src/shmir/data/__init__.py",
		"/Users/nozdi/shmir/src/shmir/testing.py",
		"/Users/nozdi/shmir/src/shmir/views.py",
		"/Users/nozdi/shmir_client/README.md",
		"/Users/nozdi/.plrc",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/User/Prolog.sublime-settings",
		"/Users/nozdi/uam/lpi/LPI/dane.pl",
		"/Users/nozdi/uam/funkcyjne/cw1.hs",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/nozdi/shmir/src/shmir/structures/miR-30a",
		"/Users/nozdi/shmir/puppet/manifests/shmir.pp",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/nozdi/tools/giza-pp/Makefile",
		"/opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_textproc_mosesdecoder/mosesdecoder/main.log",
		"/Users/nozdi/Library/Application Support/Sublime Text 3/Packages/SublimeHaskell/ModuleInspector.hs",
		"/Users/nozdi/uam/funkcyjne/    Parse error in pattern",
		"/Users/nozdi/Work/u9googleplace/tools/activities/lib/eventbrite/client.py",
		"/Users/nozdi/Work/u9googleplace/tools/activities/requirements.txt",
		"/Users/nozdi/Work/u9googleplace/tools/activities/main.py",
		"/Users/nozdi/Work/u9googleplace/tools/activities/apis/handlers.py",
		"/Users/nozdi/Work/u9googleplace/tools/activities/utils.py",
		"/Users/nozdi/Work/u9googleplace/tools/activities/apis.py",
		"/Users/nozdi/Work/u9googleplace/tools/activities/lib/pygeocoder.py",
		"/Users/nozdi/Work/u9googleplace/main.py",
		"/Users/nozdi/Work/u9googleplace/apis/others.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/nozdi/shmir/src/shmir",
			"/Users/nozdi/AMU-Poznan2013/shmir_designer",
			"/Users/nozdi/shmir_client",
			"/Users/nozdi/shmir/src/shmir",
			"/Users/nozdi/shmir/src/shmir,/Users/nozdi/Work/u9googleplace/tools/activities/lib/eventbrite",
			"/Users/nozdi/shmir/src/shmir",
			"/Users/nozdi/shmir/src/shmir/designer",
			"/Users/nozdi/Work/u9googleplace,/Users/nozdi/Work/u9googleplace",
			"/Users/nozdi/Work/u9googleplace",
			"others.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"->left",
			"cout",
			"f3",
			"min",
			"pom",
			"2",
			"eft",
			"NULL",
			"\"<<",
			"value",
			"min",
			"f2->",
			"n-",
			"n.",
			"n",
			"value",
			"FIBONNACI_H",
			"BINARYHEAP_H",
			"binary",
			"print",
			"[",
			"A",
			"largest",
			"testset.crawl.ref.pl",
			"ptrain/Europarl.en-pl.model.tar.gz",
			"phrase",
			"test",
			"with_statement",
			"TRG",
			"HEREDIR",
			"recaser",
			"threads",
			"$Bin",
			"truecase",
			">",
			"leftAndRightNodes",
			",",
			"unique",
			"x",
			"admin@pycircle.org",
			"goodbye",
			"pom",
			"(e, f)",
			"score_frame",
			"adjusted",
			"structure",
			"score_frame",
			"path_id",
			"adjust_frames",
			"get_frames",
			"zip_file",
			"designer",
			"errors",
			"errors.",
			"seq_to_be_check",
			"check_input",
			"check_input_single",
			"heck_input_single",
			"check_input_single",
			"seq",
			"complementary_level",
			"check_complementary",
			"len(seq2)",
			"len(seq1)",
			"mol2",
			"mol1",
			"check_complementary_single",
			"status",
			"delegate_mfold",
			"execute_mfold",
			"zip_mfold",
			"zipped_mfold",
			"zipped_mfo",
			"path.",
			"waitpid",
			"path_id",
			"frames_by_name",
			"in_inorder",
			"in_in",
			"in_pre",
			"=!=",
			"B",
			"score",
			"fold_and_score",
			"true",
			"subtasks",
			"queu",
			"shmir_from_sirna_score",
			"queue",
			"left_space",
			"let",
			"string",
			":par",
			":para",
			"mfold",
			"url",
			"logger",
			"subtask",
			"score",
			"fold_and_score",
			"result",
			"best_sequeneces",
			"http://",
			"perl",
			"rename",
			"remove",
			"name",
			"sirna",
			"get_json",
			"IncorrectDataError",
			"input",
			"INputexception",
			"task_id",
			"folder2",
			"folder1",
			"frames_by_name",
			"fold_and",
			"shmir_from",
			"fold_and_score",
			"shmir_from_fas",
			"shmir_from",
			"shmir",
			"shmir_from_fasta",
			"len(",
			"best seq",
			"sqs len",
			"super+shift+l",
			"super+l"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"score_structure",
			"adjusted_frames",
			"adjust_frames",
			"parse_input",
			"complementarity_level",
			"best_complementarity",
			"complementary_level",
			"delegate",
			"execute",
			"zip_file",
			"zip_mfold",
			"os.waitpid",
			"httplib2",
			"shmir_from_sirna_score",
			"ValidationError",
			"ef_location_events_count",
			"quantity",
			"Ś",
			"ż",
			"ś",
			"ć",
			"ę",
			"ź",
			"ą",
			"ł"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "fibonacci.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5903,
						"regions":
						{
						},
						"selection":
						[
							[
								3842,
								3842
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2388.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "binary.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2515,
						"regions":
						{
						},
						"selection":
						[
							[
								2241,
								2241
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1590.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1642,
						"regions":
						{
						},
						"selection":
						[
							[
								769,
								769
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 99.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "binary.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 624,
						"regions":
						{
						},
						"selection":
						[
							[
								579,
								579
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "fibonacci.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 679,
						"regions":
						{
						},
						"selection":
						[
							[
								585,
								585
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 68.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_sublime_load":
	{
		"height": 266.0
	},
	"project": "heap.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"fig.yml"
			],
			[
				"ddes",
				"src/shmir/designer/design.py"
			],
			[
				"desi",
				"src/shmir/designer/design.py"
			],
			[
				"re",
				"recur1.py"
			],
			[
				"ser",
				"server.py"
			],
			[
				"ss",
				"ss.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 854.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 183.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
